version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.2.1
  go: circleci/go@1.9.0
  kubernetes: circleci/kubernetes@1.3.1
  helm: circleci/helm@2.0.1

jobs:
  build_lint_tests:
    machine:
      image: ubuntu-2204:2024.01.1
      resource_class: large
    steps:
      - go/install:
          version: "1.21.4"
      - checkout
      - run:
          name: Print Go environment
          command: "go env"
      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - go-mod-v6-{{ checksum "go.sum" }}
      - add_ssh_keys
      - run:
          name: Build Staking Expiry Checker
          command: make build
      - save_cache:
          key: go-mod-v6-{{ checksum "go.sum" }}
          paths:
            - "/home/circleci/.go_workspace/pkg/mod"
      - run:
          name: Lint
          command: |
            curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.55.2
            ./bin/golangci-lint run
      - run:
          name: Run tests
          command: |
            make test

  build_docker:
    machine:
      image: ubuntu-2204:2024.01.1
      resource_class: large
    steps:
      - checkout
      - add_ssh_keys
      - aws-ecr/build-image:
          push-image: false
          dockerfile: Dockerfile
          path: ./contrib/images/staking-expiry-checker/
          build-path: ./
          tag: "$CIRCLE_SHA1,$CIRCLE_TAG"
          repo: "staking-expiry-checker"
          extra-build-args: "--secret id=sshKey,src=/home/circleci/.ssh/$DEPLOY_KEY_NAME"
      - run:
          name: Save Docker image to export it to workspace
          command: |
            docker save $(docker image ls --format '{{.Repository}}:{{.Tag}}') > /tmp/staking-expiry-checker.tar
      - persist_to_workspace:
          root: /tmp
          paths:
            - staking-expiry-checker.tar

  push_docker:
    machine:
      image: ubuntu-2204:2024.01.1
      resource_class: large
    steps:
      - add_ssh_keys
      - attach_workspace:
          at: /tmp
      - run:
          name: Load Docker image from workspace
          command: |
            docker load -i /tmp/staking-expiry-checker.tar
      - aws-ecr/ecr-login:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          region: "$AWS_REGION"
      - aws-ecr/push-image:
          registry-id: AWS_ECR_REGISTRY_ID
          region: "$AWS_REGION"
          repo: "staking-expiry-checker"
          tag: "$CIRCLE_SHA1,$CIRCLE_TAG"

workflows:
  CICD:
    jobs:
      - build_lint_tests
      - build_docker:
          filters:
            tags:
              only: /.*/
      - push_docker:
          requires:
            - build_docker
          filters:
            tags:
              only: /.*/
            branches:
              only:
                - main
                - dev
